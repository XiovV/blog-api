basePath: /v1
definitions:
  server.confirmMfaRequest:
    properties:
      secret:
        type: string
      totp:
        type: string
    type: object
  server.confirmMfaResponse:
    properties:
      recovery_codes:
        items:
          type: string
        type: array
    type: object
  server.createPasswordResetTokenRequest:
    properties:
      email:
        type: string
    type: object
  server.createPostRequest:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  server.createPostResponse:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  server.errorResponse:
    properties:
      error:
        description: Error response model
        type: string
    type: object
  server.getPersonalPostsResponse:
    properties:
      posts:
        items:
          $ref: '#/definitions/server.personalPosts'
        type: array
    type: object
  server.getPostResponse:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  server.loginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    type: object
  server.messageResponse:
    properties:
      message:
        description: Message response model
        type: string
    type: object
  server.mfaLoginRequest:
    properties:
      password:
        type: string
      totp:
        type: string
      username:
        type: string
    type: object
  server.personalPosts:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
  server.recoveryLoginRequest:
    properties:
      password:
        type: string
      recovery_code:
        type: string
      username:
        type: string
    type: object
  server.refreshTokenRequest:
    properties:
      refresh_token:
        type: string
    type: object
  server.registerRequest:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
  server.resetUserPasswordRequest:
    properties:
      password:
        type: string
    type: object
  server.setupMfaHandlerResponse:
    properties:
      secret:
        type: string
    type: object
  server.tokenPair:
    properties:
      access_token:
        description: user's access token
        type: string
      refresh_token:
        description: user's refresh token
        type: string
    type: object
  server.updatePostRequest:
    properties:
      body:
        type: string
      title:
        type: string
    type: object
  server.updatePostResponse:
    properties:
      body:
        type: string
      id:
        type: integer
      title:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  title: Simple Blog API
  version: "1.0"
paths:
  /posts/:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create post body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.createPostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.createPostResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Creates a post
      tags:
      - post
  /posts/{postId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Post deleted successfully
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid or the permissions for performing
            this action are insufficient
          schema:
            $ref: '#/definitions/server.errorResponse'
        "404":
          description: A post with the provided id doesn't exist
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Deletes a post
      tags:
      - post
    get:
      consumes:
      - application/json
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.getPostResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "404":
          description: A post with the provided id doesn't exist
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Gets a post
      tags:
      - post
    put:
      consumes:
      - application/json
      parameters:
      - description: post id
        in: path
        name: postId
        required: true
        type: integer
      - description: Edit post body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.updatePostRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.updatePostResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid or the permissions for performing
            this action are insufficient
          schema:
            $ref: '#/definitions/server.errorResponse'
        "404":
          description: User has no posts
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Edits a post
      tags:
      - post
  /posts/user/{username}:
    get:
      consumes:
      - application/json
      parameters:
      - description: username
        in: path
        name: username
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.getPersonalPostsResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid or the permissions for performing
            this action are insufficient
          schema:
            $ref: '#/definitions/server.errorResponse'
        "404":
          description: User has no posts
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Gets a post
      tags:
      - post
  /users/{userId}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: user id
        in: path
        name: userId
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: User deleted successfully
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns user's posts.
      tags:
      - user
  /users/login:
    post:
      consumes:
      - application/json
      description: If the user has 2FA enabled, 302 Found will be returned, in which
        case POST /users/login/mfa should be used to log the user in.
      parameters:
      - description: Login user body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.loginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenPair'
        "302":
          description: User has 2FA enabled and needs to call POST /users/login/mfa.
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Checks if the login credentials are correct and returns the access
        and refresh tokens.
      tags:
      - user
  /users/login/mfa:
    post:
      consumes:
      - application/json
      description: Checks if the login credentials and totp code are correct and returns
        the access and refresh tokens. A 400 Bad Request status code and error message
        will be returned if the user doesn't have 2FA enabled, so only use this if
        the user has 2FA enabled on their account.
      parameters:
      - description: Login user body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.mfaLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenPair'
        "400":
          description: Input is either invalid, or user doesn't have 2FA enabled.
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Checks if the login credentials and totp code are correct and returns
        the access and refresh tokens.
      tags:
      - user
  /users/login/recovery:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.recoveryLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenPair'
        "400":
          description: Input is either invalid, or the provided recovery code is incorrect.
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Checks if the login credentials and recovery code are correct and returns
        the access and refresh tokens.
      tags:
      - user
  /users/mfa:
    post:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.setupMfaHandlerResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns the secret used for generating TOTP codes.
      tags:
      - user
  /users/mfa/confirm:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login user body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.confirmMfaRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.confirmMfaResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Checks if the provided TOTP code is correct and returns an array of
        recovery codes.
      tags:
      - user
  /users/password-reset:
    post:
      consumes:
      - application/json
      parameters:
      - description: Create password reset token body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.createPasswordResetTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.messageResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Creates a password reset token and sends an email with password reset
        instructions.
      tags:
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: Reset password body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.resetUserPasswordRequest'
      - description: password reset token
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.messageResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: Password reset token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Resets the user's password.
      tags:
      - user
  /users/posts:
    get:
      consumes:
      - application/json
      parameters:
      - description: page
        in: query
        name: page
        required: true
        type: integer
      - description: limit
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.getPersonalPostsResponse'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "404":
          description: User has no posts
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Returns user's posts.
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register user body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.registerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenPair'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/server.errorResponse'
        "409":
          description: User with this username or email already exists
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      summary: Registers a user into the platform if the username and email haven't
        already been taken.
      tags:
      - user
  /users/token/refresh:
    post:
      consumes:
      - application/json
      parameters:
      - description: Refresh token body
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/server.refreshTokenRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/server.tokenPair'
        "400":
          description: Input is invalid
          schema:
            $ref: '#/definitions/server.errorResponse'
        "403":
          description: The access token or refresh token is invalid.
          schema:
            $ref: '#/definitions/server.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/server.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Return a fresh pair of tokens.
      tags:
      - user
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
